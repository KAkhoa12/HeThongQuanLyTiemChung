// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using server.Models;

#nullable disable

namespace server.Migrations
{
    [DbContext(typeof(HeThongQuanLyTiemChungContext))]
    [Migration("20250903100326_InitFixPhieuTiem1")]
    partial class InitFixPhieuTiem1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("server.Models.AnhDiaDiem", b =>
                {
                    b.Property<string>("MaAnhDiaDiem")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maAnhDiaDiem");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<bool?>("LaAnhChinh")
                        .HasColumnType("bit")
                        .HasColumnName("laAnhChinh");

                    b.Property<string>("MaAnh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maAnh");

                    b.Property<string>("MaDiaDiem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maDiaDiem");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<int?>("ThuTuHienThi")
                        .HasColumnType("int")
                        .HasColumnName("thuTuHienThi");

                    b.HasKey("MaAnhDiaDiem")
                        .HasName("PK__AnhDiaDi__11AFA013741D3687");

                    b.HasIndex("MaAnh");

                    b.HasIndex("MaDiaDiem");

                    b.ToTable("AnhDiaDiem", (string)null);
                });

            modelBuilder.Entity("server.Models.AnhDichVu", b =>
                {
                    b.Property<string>("MaAnhDichVu")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maAnhDichVu");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<bool?>("LaAnhChinh")
                        .HasColumnType("bit")
                        .HasColumnName("laAnhChinh");

                    b.Property<string>("MaAnh")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maAnh");

                    b.Property<string>("MaDichVu")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maDichVu");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<int?>("ThuTuHienThi")
                        .HasColumnType("int")
                        .HasColumnName("thuTuHienThi");

                    b.HasKey("MaAnhDichVu")
                        .HasName("PK__AnhDichV__07C3CE77BFF61503");

                    b.HasIndex("MaAnh");

                    b.HasIndex("MaDichVu");

                    b.ToTable("AnhDichVu", (string)null);
                });

            modelBuilder.Entity("server.Models.AnhNhaCungCap", b =>
                {
                    b.Property<string>("MaAnhNhaCungCap")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maAnhNhaCungCap");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MaAnh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maAnh");

                    b.Property<string>("MaNhaCungCap")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maNhaCungCap");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<int?>("ThuTuHienThi")
                        .HasColumnType("int")
                        .HasColumnName("thuTuHienThi");

                    b.HasKey("MaAnhNhaCungCap")
                        .HasName("PK__AnhNhaCu__F4360067F9154EE9");

                    b.HasIndex("MaAnh");

                    b.HasIndex("MaNhaCungCap");

                    b.ToTable("AnhNhaCungCap", (string)null);
                });

            modelBuilder.Entity("server.Models.AnhVaccine", b =>
                {
                    b.Property<string>("MaAnhVaccine")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maAnhVaccine");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<bool?>("LaAnhChinh")
                        .HasColumnType("bit")
                        .HasColumnName("laAnhChinh");

                    b.Property<string>("MaAnh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maAnh");

                    b.Property<string>("MaVaccine")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maVaccine");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<int?>("ThuTuHienThi")
                        .HasColumnType("int")
                        .HasColumnName("thuTuHienThi");

                    b.HasKey("MaAnhVaccine")
                        .HasName("PK__AnhVacci__9BF0A5842EB0BEB6");

                    b.HasIndex("MaAnh");

                    b.HasIndex("MaVaccine");

                    b.ToTable("AnhVaccine", (string)null);
                });

            modelBuilder.Entity("server.Models.BacSi", b =>
                {
                    b.Property<string>("MaBacSi")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maBacSi");

                    b.Property<string>("ChuyenMon")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("chuyenMon");

                    b.Property<string>("DiaDiemMaDiaDiem")
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MaDiaDiem")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maDiaDiem");

                    b.Property<string>("MaNguoiDung")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maNguoiDung");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<string>("SoGiayPhep")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("soGiayPhep");

                    b.HasKey("MaBacSi")
                        .HasName("PK__BacSi__F48AA2377FD9FA0E");

                    b.HasIndex("DiaDiemMaDiaDiem");

                    b.HasIndex("MaDiaDiem");

                    b.HasIndex(new[] { "MaNguoiDung" }, "UQ__BacSi__446439EBDE1365ED")
                        .IsUnique();

                    b.ToTable("BacSi", (string)null);
                });

            modelBuilder.Entity("server.Models.ChiTietNhap", b =>
                {
                    b.Property<string>("MaChiTiet")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maChiTiet");

                    b.Property<decimal?>("Gia")
                        .HasColumnType("decimal(12, 2)")
                        .HasColumnName("gia");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MaLo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maLo");

                    b.Property<string>("MaPhieuNhap")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maPhieuNhap");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int")
                        .HasColumnName("soLuong");

                    b.HasKey("MaChiTiet")
                        .HasName("PK__ChiTietN__99964888BEA3827A");

                    b.HasIndex("MaLo");

                    b.HasIndex("MaPhieuNhap");

                    b.ToTable("ChiTietNhap", (string)null);
                });

            modelBuilder.Entity("server.Models.ChiTietPhieuTiem", b =>
                {
                    b.Property<string>("MaChiTietPhieuTiem")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maChiTietPhieuTiem");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MaPhieuTiem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maPhieuTiem");

                    b.Property<string>("MaVaccine")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maVaccine");

                    b.Property<int>("MuiTiemThucTe")
                        .HasColumnType("int")
                        .HasColumnName("muiTiemThucTe");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<int>("ThuTu")
                        .HasColumnType("int")
                        .HasColumnName("thuTu");

                    b.HasKey("MaChiTietPhieuTiem")
                        .HasName("PK__ChiTietP__NewKey");

                    b.HasIndex("MaPhieuTiem");

                    b.HasIndex("MaVaccine");

                    b.ToTable("ChiTietPhieuTiem", (string)null);
                });

            modelBuilder.Entity("server.Models.ChiTietThanhLy", b =>
                {
                    b.Property<string>("MaChiTiet")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maChiTiet");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("LyDo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("lyDo");

                    b.Property<string>("MaLo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maLo");

                    b.Property<string>("MaPhieuThanhLy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maPhieuThanhLy");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int")
                        .HasColumnName("soLuong");

                    b.HasKey("MaChiTiet")
                        .HasName("PK__ChiTietT__99964888EF363A6A");

                    b.HasIndex("MaLo");

                    b.HasIndex("MaPhieuThanhLy");

                    b.ToTable("ChiTietThanhLy", (string)null);
                });

            modelBuilder.Entity("server.Models.ChiTietXuat", b =>
                {
                    b.Property<string>("MaChiTiet")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maChiTiet");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MaLo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maLo");

                    b.Property<string>("MaPhieuXuat")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maPhieuXuat");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int")
                        .HasColumnName("soLuong");

                    b.HasKey("MaChiTiet")
                        .HasName("PK__ChiTietX__99964888FAFBED70");

                    b.HasIndex("MaLo");

                    b.HasIndex("MaPhieuXuat");

                    b.ToTable("ChiTietXuat", (string)null);
                });

            modelBuilder.Entity("server.Models.DiaDiem", b =>
                {
                    b.Property<string>("MaDiaDiem")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maDiaDiem");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("diaChi");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("GioMoCua")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("gioMoCua");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("LoaiDiaDiem")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("loaiDiaDiem");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("moTa");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("soDienThoai");

                    b.Property<int?>("SucChua")
                        .HasColumnType("int")
                        .HasColumnName("sucChua");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ten");

                    b.HasKey("MaDiaDiem")
                        .HasName("PK__DiaDiem__1C7F9DAF1C9956CF");

                    b.ToTable("DiaDiem", (string)null);
                });

            modelBuilder.Entity("server.Models.DichVu", b =>
                {
                    b.Property<string>("MaDichVu")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maDichVu");

                    b.Property<decimal?>("Gia")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("gia");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MaLoaiDichVu")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maLoaiDichVu");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("moTa");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ten");

                    b.HasKey("MaDichVu")
                        .HasName("PK__DichVu__80F48B0989ADE15A");

                    b.HasIndex("MaLoaiDichVu");

                    b.ToTable("DichVu", (string)null);
                });

            modelBuilder.Entity("server.Models.DichVuVaccine", b =>
                {
                    b.Property<string>("MaDichVuVaccine")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maDichVuVaccine");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ghiChu");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MaDichVu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maDichVu");

                    b.Property<string>("MaVaccine")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maVaccine");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<int>("SoMuiChuan")
                        .HasColumnType("int")
                        .HasColumnName("soMuiChuan");

                    b.Property<int?>("ThuTu")
                        .HasColumnType("int")
                        .HasColumnName("thuTu");

                    b.HasKey("MaDichVuVaccine")
                        .HasName("PK__DichVuVa__EC4E1E7164275528");

                    b.HasIndex("MaDichVu");

                    b.HasIndex("MaVaccine");

                    b.ToTable("DichVuVaccine", (string)null);
                });

            modelBuilder.Entity("server.Models.DonHang", b =>
                {
                    b.Property<string>("MaDonHang")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maDonHang");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ghiChu");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MaDiaDiemYeuThich")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maDiaDiemYeuThich");

                    b.Property<string>("MaNguoiDung")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maNguoiDung");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayDat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayDat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<decimal>("TongTienGoc")
                        .HasColumnType("decimal(12, 2)")
                        .HasColumnName("tongTienGoc");

                    b.Property<decimal>("TongTienThanhToan")
                        .HasColumnType("decimal(12, 2)")
                        .HasColumnName("tongTienThanhToan");

                    b.Property<string>("TrangThaiDon")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("trangThaiDon");

                    b.HasKey("MaDonHang")
                        .HasName("PK__DonHang__871D381917A744E7");

                    b.HasIndex("MaDiaDiemYeuThich");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("DonHang", (string)null);
                });

            modelBuilder.Entity("server.Models.DonHangChiTiet", b =>
                {
                    b.Property<string>("MaDonHangChiTiet")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maDonHangChiTiet");

                    b.Property<decimal?>("DonGiaMui")
                        .HasColumnType("decimal(12, 2)")
                        .HasColumnName("donGiaMui");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MaDichVu")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("MaDichVu");

                    b.Property<string>("MaDonHang")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maDonHang");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<int>("SoMuiChuan")
                        .HasColumnType("int")
                        .HasColumnName("soMuiChuan");

                    b.Property<decimal?>("ThanhTien")
                        .HasColumnType("decimal(12, 2)")
                        .HasColumnName("thanhTien");

                    b.HasKey("MaDonHangChiTiet")
                        .HasName("PK__DonHangC__7212B475698B2C68");

                    b.HasIndex("MaDichVu");

                    b.HasIndex("MaDonHang");

                    b.ToTable("DonHangChiTiet", (string)null);
                });

            modelBuilder.Entity("server.Models.DonHangKhuyenMai", b =>
                {
                    b.Property<string>("MaDonHangKhuyenMai")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maDonHangKhuyenMai");

                    b.Property<decimal?>("GiamGiaGoc")
                        .HasColumnType("decimal(12, 2)")
                        .HasColumnName("giamGiaGoc");

                    b.Property<decimal?>("GiamGiaThucTe")
                        .HasColumnType("decimal(12, 2)")
                        .HasColumnName("giamGiaThucTe");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MaDonHang")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maDonHang");

                    b.Property<string>("MaKhuyenMai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maKhuyenMai");

                    b.Property<DateTime?>("NgayApDung")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayApDung");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.HasKey("MaDonHangKhuyenMai")
                        .HasName("PK__DonHangK__67C32372730B7070");

                    b.HasIndex("MaDonHang");

                    b.HasIndex("MaKhuyenMai");

                    b.ToTable("DonHangKhuyenMai", (string)null);
                });

            modelBuilder.Entity("server.Models.KhuyenMai", b =>
                {
                    b.Property<string>("MaKhuyenMai")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maKhuyenMai");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("code");

                    b.Property<decimal?>("DieuKienToiThieu")
                        .HasColumnType("decimal(12, 2)")
                        .HasColumnName("dieuKienToiThieu");

                    b.Property<decimal?>("GiaTriGiam")
                        .HasColumnType("decimal(12, 2)")
                        .HasColumnName("giaTriGiam");

                    b.Property<decimal?>("GiaTriToiThieu")
                        .HasColumnType("decimal(12, 2)")
                        .HasColumnName("giaTriToiThieu");

                    b.Property<decimal?>("GiamToiDa")
                        .HasColumnType("decimal(12, 2)")
                        .HasColumnName("giamToiDa");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("LoaiGiam")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("loaiGiam");

                    b.Property<string>("MaLoaiKhuyenMai")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maLoaiKhuyenMai");

                    b.Property<DateOnly?>("NgayBatDau")
                        .HasColumnType("date")
                        .HasColumnName("ngayBatDau");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateOnly?>("NgayKetThuc")
                        .HasColumnType("date")
                        .HasColumnName("ngayKetThuc");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<int?>("SoLuotDaDung")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("soLuotDaDung");

                    b.Property<int?>("SoLuotDung")
                        .HasColumnType("int")
                        .HasColumnName("soLuotDung");

                    b.Property<string>("TenKhuyenMai")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tenKhuyenMai");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("trangThai");

                    b.HasKey("MaKhuyenMai")
                        .HasName("PK__KhuyenMa__87BEDDE9B125734B");

                    b.HasIndex("MaLoaiKhuyenMai");

                    b.ToTable("KhuyenMai", (string)null);
                });

            modelBuilder.Entity("server.Models.LichHen", b =>
                {
                    b.Property<string>("MaLichHen")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maLichHen");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ghiChu");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MaDiaDiem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maDiaDiem");

                    b.Property<string>("MaDonHang")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maDonHang");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime>("NgayHen")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayHen");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("trangThai");

                    b.HasKey("MaLichHen")
                        .HasName("PK__LichHen__FBFE3223EFA716D4");

                    b.HasIndex("MaDiaDiem");

                    b.HasIndex("MaDonHang");

                    b.ToTable("LichHen", (string)null);
                });

            modelBuilder.Entity("server.Models.LichLamViec", b =>
                {
                    b.Property<string>("MaLichLamViec")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maLichLamViec");

                    b.Property<int?>("DaDat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("daDat");

                    b.Property<TimeOnly>("GioBatDau")
                        .HasColumnType("time")
                        .HasColumnName("gioBatDau");

                    b.Property<TimeOnly>("GioKetThuc")
                        .HasColumnType("time")
                        .HasColumnName("gioKetThuc");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MaBacSi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maBacSi");

                    b.Property<string>("MaDiaDiem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maDiaDiem");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateOnly>("NgayLam")
                        .HasColumnType("date")
                        .HasColumnName("ngayLam");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<int>("SoLuongCho")
                        .HasColumnType("int")
                        .HasColumnName("soLuongCho");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("trangThai");

                    b.HasKey("MaLichLamViec")
                        .HasName("PK__LichLamV__7D0410EFF30DFC6B");

                    b.HasIndex("MaBacSi");

                    b.HasIndex("MaDiaDiem");

                    b.ToTable("LichLamViec", (string)null);
                });

            modelBuilder.Entity("server.Models.LichTiemChuan", b =>
                {
                    b.Property<string>("MaLichTiemChuan")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maLichTiemChuan");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ghiChu");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MaVaccine")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maVaccine");

                    b.Property<int>("MuiThu")
                        .HasColumnType("int")
                        .HasColumnName("muiThu");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<int?>("SoNgaySauMuiTruoc")
                        .HasColumnType("int")
                        .HasColumnName("soNgaySauMuiTruoc");

                    b.Property<int?>("TuoiThangToiDa")
                        .HasColumnType("int")
                        .HasColumnName("tuoiThangToiDa");

                    b.Property<int?>("TuoiThangToiThieu")
                        .HasColumnType("int")
                        .HasColumnName("tuoiThangToiThieu");

                    b.HasKey("MaLichTiemChuan")
                        .HasName("PK__LichTiem__6B09F439B057333C");

                    b.HasIndex("MaVaccine");

                    b.ToTable("LichTiemChuan", (string)null);
                });

            modelBuilder.Entity("server.Models.LoVaccine", b =>
                {
                    b.Property<string>("MaLo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maLo");

                    b.Property<decimal?>("GiaNhap")
                        .HasColumnType("decimal(12, 2)")
                        .HasColumnName("giaNhap");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MaNhaCungCap")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maNhaCungCap");

                    b.Property<string>("MaVaccine")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maVaccine");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateOnly?>("NgayHetHan")
                        .HasColumnType("date")
                        .HasColumnName("ngayHetHan");

                    b.Property<DateOnly?>("NgaySanXuat")
                        .HasColumnType("date")
                        .HasColumnName("ngaySanXuat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<string>("SoLo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("soLo");

                    b.Property<int?>("SoLuongHienTai")
                        .HasColumnType("int")
                        .HasColumnName("soLuongHienTai");

                    b.Property<int?>("SoLuongNhap")
                        .HasColumnType("int")
                        .HasColumnName("soLuongNhap");

                    b.HasKey("MaLo")
                        .HasName("PK__LoVaccin__7A3EB73C86F7BDC2");

                    b.HasIndex("MaNhaCungCap");

                    b.HasIndex("MaVaccine");

                    b.ToTable("LoVaccine", (string)null);
                });

            modelBuilder.Entity("server.Models.LoaiDichVu", b =>
                {
                    b.Property<string>("MaLoaiDichVu")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maLoaiDichVu");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<string>("TenLoai")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tenLoai");

                    b.HasKey("MaLoaiDichVu")
                        .HasName("PK__LoaiDich__9A9DA689CEE5B89C");

                    b.ToTable("LoaiDichVu", (string)null);
                });

            modelBuilder.Entity("server.Models.LoaiKhuyenMai", b =>
                {
                    b.Property<string>("MaLoaiKhuyenMai")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maLoaiKhuyenMai");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MoTa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("moTa");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<string>("TenLoai")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tenLoai");

                    b.HasKey("MaLoaiKhuyenMai")
                        .HasName("PK__LoaiKhuy__08E7B55315812EBE");

                    b.ToTable("LoaiKhuyenMai", (string)null);
                });

            modelBuilder.Entity("server.Models.NguoiDung", b =>
                {
                    b.Property<string>("MaNguoiDung")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maNguoiDung");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("diaChi");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("GioiTinh")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("gioiTinh");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MaAnh")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maAnh");

                    b.Property<string>("MaVaiTro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maVaiTro");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("matKhau");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateOnly?>("NgaySinh")
                        .HasColumnType("date")
                        .HasColumnName("ngaySinh");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("soDienThoai");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ten");

                    b.HasKey("MaNguoiDung")
                        .HasName("PK__NguoiDun__446439EA70F6DD99");

                    b.HasIndex("MaAnh");

                    b.HasIndex("MaVaiTro");

                    b.ToTable("NguoiDung", (string)null);
                });

            modelBuilder.Entity("server.Models.NguoiDungQuyen", b =>
                {
                    b.Property<string>("MaNguoiDung")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maNguoiDung");

                    b.Property<string>("MaQuyen")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maQuyen");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.HasKey("MaNguoiDung", "MaQuyen")
                        .HasName("PK__NguoiDun__6D143830CA7CAD0C");

                    b.HasIndex("MaQuyen");

                    b.ToTable("NguoiDungQuyen", (string)null);
                });

            modelBuilder.Entity("server.Models.NguonAnh", b =>
                {
                    b.Property<string>("MaAnh")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maAnh");

                    b.Property<string>("AltText")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("altText");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MaNhan")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maNhan");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<string>("NguoiTai")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nguoiTai");

                    b.Property<string>("UrlAnh")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("urlAnh");

                    b.HasKey("MaAnh")
                        .HasName("PK__NguonAnh__184D7736282309AD");

                    b.HasIndex("MaNhan");

                    b.ToTable("NguonAnh", (string)null);
                });

            modelBuilder.Entity("server.Models.NhaCungCap", b =>
                {
                    b.Property<string>("MaNhaCungCap")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maNhaCungCap");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("diaChi");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MaAnh")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maAnh");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<string>("NguoiLienHe")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nguoiLienHe");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("soDienThoai");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ten");

                    b.HasKey("MaNhaCungCap")
                        .HasName("PK__NhaCungC__D0B4D6DE9EA7702A");

                    b.HasIndex("MaAnh");

                    b.ToTable("NhaCungCap", (string)null);
                });

            modelBuilder.Entity("server.Models.NhanAnh", b =>
                {
                    b.Property<string>("MaNhan")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maNhan");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MoTa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("moTa");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<string>("TenNhan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tenNhan");

                    b.HasKey("MaNhan")
                        .HasName("PK__NhanAnh__83085ED087E4C8BC");

                    b.ToTable("NhanAnh", (string)null);
                });

            modelBuilder.Entity("server.Models.PhienDangNhap", b =>
                {
                    b.Property<string>("MaPhien")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maPhien");

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("accessToken");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MaNguoiDung")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maNguoiDung");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("refreshToken");

                    b.Property<DateTime>("ThoiHan")
                        .HasColumnType("datetime")
                        .HasColumnName("thoiHan");

                    b.Property<DateTime>("ThoiHanRefresh")
                        .HasColumnType("datetime")
                        .HasColumnName("thoiHanRefresh");

                    b.HasKey("MaPhien")
                        .HasName("PK__PhienDan__49A5B118D2384D7A");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("PhienDangNhap", (string)null);
                });

            modelBuilder.Entity("server.Models.PhieuDangKyLichTiem", b =>
                {
                    b.Property<string>("MaPhieuDangKy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maPhieuDangKy");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ghiChu");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("LyDoTuChoi")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("lyDoTuChoi");

                    b.Property<string>("MaDiaDiem")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maDiaDiem");

                    b.Property<string>("MaDichVu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maDichVu");

                    b.Property<string>("MaKhachHang")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maKhachHang");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime>("NgayDangKy")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayDangKy");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("trangThai");

                    b.HasKey("MaPhieuDangKy")
                        .HasName("PK__PhieuDan__NewKey");

                    b.HasIndex("MaDiaDiem");

                    b.HasIndex("MaDichVu");

                    b.HasIndex("MaKhachHang");

                    b.ToTable("PhieuDangKyLichTiem", (string)null);
                });

            modelBuilder.Entity("server.Models.PhieuNhap", b =>
                {
                    b.Property<string>("MaPhieuNhap")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maPhieuNhap");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MaNhaCungCap")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maNhaCungCap");

                    b.Property<string>("MaQuanLy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maQuanLy");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayNhap")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayNhap");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<decimal?>("TongTien")
                        .HasColumnType("decimal(12, 2)")
                        .HasColumnName("tongTien");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("trangThai");

                    b.HasKey("MaPhieuNhap")
                        .HasName("PK__PhieuNha__E27639346EBA01D5");

                    b.HasIndex("MaNhaCungCap");

                    b.HasIndex("MaQuanLy");

                    b.ToTable("PhieuNhap", (string)null);
                });

            modelBuilder.Entity("server.Models.PhieuThanhLy", b =>
                {
                    b.Property<string>("MaPhieuThanhLy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maPhieuThanhLy");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MaDiaDiem")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maDiaDiem");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<DateTime?>("NgayThanhLy")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayThanhLy");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("trangThai");

                    b.HasKey("MaPhieuThanhLy")
                        .HasName("PK__PhieuTha__4DB6029553C3A6EE");

                    b.HasIndex("MaDiaDiem");

                    b.ToTable("PhieuThanhLy", (string)null);
                });

            modelBuilder.Entity("server.Models.PhieuTiem", b =>
                {
                    b.Property<string>("MaPhieuTiem")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maPhieuTiem");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MaBacSi")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maBacSi");

                    b.Property<string>("MaDichVu")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maDichVu");

                    b.Property<string>("MaNguoiDung")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maNguoiDung");

                    b.Property<string>("MoTaPhanUng")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("moTaPhanUng");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<DateTime?>("NgayTiem")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTiem");

                    b.Property<string>("PhanUng")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phanUng");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("trangThai");

                    b.HasKey("MaPhieuTiem")
                        .HasName("PK__PhieuTie__4BEEAEF35F4FAF1E");

                    b.HasIndex("MaBacSi");

                    b.HasIndex("MaDichVu");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("PhieuTiem", (string)null);
                });

            modelBuilder.Entity("server.Models.PhieuXuat", b =>
                {
                    b.Property<string>("MaPhieuXuat")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maPhieuXuat");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("LoaiXuat")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("loaiXuat");

                    b.Property<string>("MaDiaDiemNhap")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maDiaDiemNhap");

                    b.Property<string>("MaDiaDiemXuat")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maDiaDiemXuat");

                    b.Property<string>("MaQuanLy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maQuanLy");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<DateTime?>("NgayXuat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayXuat");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("trangThai");

                    b.HasKey("MaPhieuXuat")
                        .HasName("PK__PhieuXua__2A661240486A4DD4");

                    b.HasIndex("MaDiaDiemNhap");

                    b.HasIndex("MaDiaDiemXuat");

                    b.HasIndex("MaQuanLy");

                    b.ToTable("PhieuXuat", (string)null);
                });

            modelBuilder.Entity("server.Models.QuanLy", b =>
                {
                    b.Property<string>("MaQuanLy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maQuanLy");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MaNguoiDung")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maNguoiDung");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.HasKey("MaQuanLy")
                        .HasName("PK__QuanLy__449603AD29CA2479");

                    b.HasIndex(new[] { "MaNguoiDung" }, "UQ__QuanLy__446439EB297BE629")
                        .IsUnique();

                    b.ToTable("QuanLy", (string)null);
                });

            modelBuilder.Entity("server.Models.Quyen", b =>
                {
                    b.Property<string>("MaQuyen")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maQuyen");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MoTa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("moTa");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("module");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<string>("TenQuyen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tenQuyen");

                    b.HasKey("MaQuyen")
                        .HasName("PK__Quyen__97001DA3065B48CB");

                    b.ToTable("Quyen", (string)null);
                });

            modelBuilder.Entity("server.Models.ThongTinNguoiDung", b =>
                {
                    b.Property<string>("MaThongTin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maThongTin");

                    b.Property<string>("BenhNen")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("benhNen");

                    b.Property<decimal?>("Bmi")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("bmi");

                    b.Property<decimal?>("CanNang")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("canNang");

                    b.Property<decimal?>("ChieuCao")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("chieuCao");

                    b.Property<string>("DiUng")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("diUng");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MaNguoiDung")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maNguoiDung");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateOnly?>("NgayKhamGanNhat")
                        .HasColumnType("date")
                        .HasColumnName("ngayKhamGanNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<string>("NhomMau")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("nhomMau");

                    b.Property<string>("ThuocDangDung")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("thuocDangDung");

                    b.Property<bool?>("TinhTrangMangThai")
                        .HasColumnType("bit")
                        .HasColumnName("tinhTrangMangThai");

                    b.HasKey("MaThongTin")
                        .HasName("PK__ThongTin__63FCB54AD367D815");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("ThongTinNguoiDung", (string)null);
                });

            modelBuilder.Entity("server.Models.TonKhoLo", b =>
                {
                    b.Property<string>("MaTonKho")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maTonKho");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MaDiaDiem")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maDiaDiem");

                    b.Property<string>("MaLo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maLo");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int")
                        .HasColumnName("soLuong");

                    b.HasKey("MaTonKho")
                        .HasName("PK__TonKhoLo__C3E0BF615ACA4846");

                    b.HasIndex("MaDiaDiem");

                    b.HasIndex("MaLo");

                    b.ToTable("TonKhoLo", (string)null);
                });

            modelBuilder.Entity("server.Models.Vaccine", b =>
                {
                    b.Property<string>("MaVaccine")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maVaccine");

                    b.Property<string>("HuongDanSuDung")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("huongDanSuDung");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<string>("NhaSanXuat")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nhaSanXuat");

                    b.Property<string>("PhongNgua")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phongNgua");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ten");

                    b.Property<int?>("TuoiBatDauTiem")
                        .HasColumnType("int")
                        .HasColumnName("tuoiBatDauTiem");

                    b.Property<int?>("TuoiKetThucTiem")
                        .HasColumnType("int")
                        .HasColumnName("tuoiKetThucTiem");

                    b.HasKey("MaVaccine")
                        .HasName("PK__Vaccine__C3084F9ECBF53FB9");

                    b.ToTable("Vaccine", (string)null);
                });

            modelBuilder.Entity("server.Models.VaiTro", b =>
                {
                    b.Property<string>("MaVaiTro")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maVaiTro");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MoTa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("moTa");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<string>("TenVaiTro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tenVaiTro");

                    b.HasKey("MaVaiTro")
                        .HasName("PK__VaiTro__BFC88AB70B5A0A5F");

                    b.ToTable("VaiTro", (string)null);
                });

            modelBuilder.Entity("server.Models.VaiTroQuyen", b =>
                {
                    b.Property<string>("MaVaiTro")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maVaiTro");

                    b.Property<string>("MaQuyen")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maQuyen");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.HasKey("MaVaiTro", "MaQuyen")
                        .HasName("PK__VaiTroQu__96B88B6D1839DB06");

                    b.HasIndex("MaQuyen");

                    b.ToTable("VaiTroQuyen", (string)null);
                });

            modelBuilder.Entity("server.Models.YeuCauDoiLich", b =>
                {
                    b.Property<string>("MaYeuCau")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maYeuCau");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("LyDo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("lyDo");

                    b.Property<string>("MaLichHen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maLichHen");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCapNhat");

                    b.Property<DateTime>("NgayHenMoi")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayHenMoi");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTao");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("trangThai");

                    b.HasKey("MaYeuCau")
                        .HasName("PK__YeuCauDo__765F6DD63B02AAE0");

                    b.HasIndex("MaLichHen");

                    b.ToTable("YeuCauDoiLich", (string)null);
                });

            modelBuilder.Entity("server.Models.AnhDiaDiem", b =>
                {
                    b.HasOne("server.Models.NguonAnh", "MaAnhNavigation")
                        .WithMany("AnhDiaDiems")
                        .HasForeignKey("MaAnh")
                        .IsRequired()
                        .HasConstraintName("FK__AnhDiaDie__maAnh__66603565");

                    b.HasOne("server.Models.DiaDiem", "MaDiaDiemNavigation")
                        .WithMany("AnhDiaDiems")
                        .HasForeignKey("MaDiaDiem")
                        .IsRequired()
                        .HasConstraintName("FK__AnhDiaDie__maDia__656C112C");

                    b.Navigation("MaAnhNavigation");

                    b.Navigation("MaDiaDiemNavigation");
                });

            modelBuilder.Entity("server.Models.AnhDichVu", b =>
                {
                    b.HasOne("server.Models.NguonAnh", "MaAnhNavigation")
                        .WithMany("AnhDichVus")
                        .HasForeignKey("MaAnh")
                        .HasConstraintName("FK__AnhDichVu__maAnh__07C12930");

                    b.HasOne("server.Models.DichVu", "MaDichVuNavigation")
                        .WithMany("AnhDichVus")
                        .HasForeignKey("MaDichVu")
                        .HasConstraintName("FK__AnhDichVu__maDic__06CD04F7");

                    b.Navigation("MaAnhNavigation");

                    b.Navigation("MaDichVuNavigation");
                });

            modelBuilder.Entity("server.Models.AnhNhaCungCap", b =>
                {
                    b.HasOne("server.Models.NguonAnh", "MaAnhNavigation")
                        .WithMany("AnhNhaCungCaps")
                        .HasForeignKey("MaAnh")
                        .IsRequired()
                        .HasConstraintName("FK__AnhNhaCun__maAnh__18EBB532");

                    b.HasOne("server.Models.NhaCungCap", "MaNhaCungCapNavigation")
                        .WithMany("AnhNhaCungCaps")
                        .HasForeignKey("MaNhaCungCap")
                        .IsRequired()
                        .HasConstraintName("FK__AnhNhaCun__maNha__17F790F9");

                    b.Navigation("MaAnhNavigation");

                    b.Navigation("MaNhaCungCapNavigation");
                });

            modelBuilder.Entity("server.Models.AnhVaccine", b =>
                {
                    b.HasOne("server.Models.NguonAnh", "MaAnhNavigation")
                        .WithMany("AnhVaccines")
                        .HasForeignKey("MaAnh")
                        .IsRequired()
                        .HasConstraintName("FK__AnhVaccin__maAnh__0B91BA14");

                    b.HasOne("server.Models.Vaccine", "MaVaccineNavigation")
                        .WithMany("AnhVaccines")
                        .HasForeignKey("MaVaccine")
                        .IsRequired()
                        .HasConstraintName("FK__AnhVaccin__maVac__0A9D95DB");

                    b.Navigation("MaAnhNavigation");

                    b.Navigation("MaVaccineNavigation");
                });

            modelBuilder.Entity("server.Models.BacSi", b =>
                {
                    b.HasOne("server.Models.DiaDiem", null)
                        .WithMany("BacSis")
                        .HasForeignKey("DiaDiemMaDiaDiem");

                    b.HasOne("server.Models.DiaDiem", "MaDiaDiemNavigation")
                        .WithMany()
                        .HasForeignKey("MaDiaDiem")
                        .HasConstraintName("FK__BacSi__maDiaDiem__NewConstraint");

                    b.HasOne("server.Models.NguoiDung", "MaNguoiDungNavigation")
                        .WithOne("BacSi")
                        .HasForeignKey("server.Models.BacSi", "MaNguoiDung")
                        .IsRequired()
                        .HasConstraintName("FK__BacSi__maNguoiDu__5CD6CB2B");

                    b.Navigation("MaDiaDiemNavigation");

                    b.Navigation("MaNguoiDungNavigation");
                });

            modelBuilder.Entity("server.Models.ChiTietNhap", b =>
                {
                    b.HasOne("server.Models.LoVaccine", "MaLoNavigation")
                        .WithMany("ChiTietNhaps")
                        .HasForeignKey("MaLo")
                        .HasConstraintName("FK__ChiTietNha__maLo__236943A5");

                    b.HasOne("server.Models.PhieuNhap", "MaPhieuNhapNavigation")
                        .WithMany("ChiTietNhaps")
                        .HasForeignKey("MaPhieuNhap")
                        .HasConstraintName("FK__ChiTietNh__maPhi__22751F6C");

                    b.Navigation("MaLoNavigation");

                    b.Navigation("MaPhieuNhapNavigation");
                });

            modelBuilder.Entity("server.Models.ChiTietPhieuTiem", b =>
                {
                    b.HasOne("server.Models.PhieuTiem", "MaPhieuTiemNavigation")
                        .WithMany("ChiTietPhieuTiems")
                        .HasForeignKey("MaPhieuTiem")
                        .IsRequired()
                        .HasConstraintName("FK__ChiTietPh__maPhi__NewConstraint1");

                    b.HasOne("server.Models.Vaccine", "MaVaccineNavigation")
                        .WithMany()
                        .HasForeignKey("MaVaccine")
                        .IsRequired()
                        .HasConstraintName("FK__ChiTietPh__maVac__NewConstraint2");

                    b.Navigation("MaPhieuTiemNavigation");

                    b.Navigation("MaVaccineNavigation");
                });

            modelBuilder.Entity("server.Models.ChiTietThanhLy", b =>
                {
                    b.HasOne("server.Models.LoVaccine", "MaLoNavigation")
                        .WithMany("ChiTietThanhLies")
                        .HasForeignKey("MaLo")
                        .HasConstraintName("FK__ChiTietTha__maLo__31B762FC");

                    b.HasOne("server.Models.PhieuThanhLy", "MaPhieuThanhLyNavigation")
                        .WithMany("ChiTietThanhLies")
                        .HasForeignKey("MaPhieuThanhLy")
                        .HasConstraintName("FK__ChiTietTh__maPhi__30C33EC3");

                    b.Navigation("MaLoNavigation");

                    b.Navigation("MaPhieuThanhLyNavigation");
                });

            modelBuilder.Entity("server.Models.ChiTietXuat", b =>
                {
                    b.HasOne("server.Models.LoVaccine", "MaLoNavigation")
                        .WithMany("ChiTietXuats")
                        .HasForeignKey("MaLo")
                        .HasConstraintName("FK__ChiTietXua__maLo__2B0A656D");

                    b.HasOne("server.Models.PhieuXuat", "MaPhieuXuatNavigation")
                        .WithMany("ChiTietXuats")
                        .HasForeignKey("MaPhieuXuat")
                        .HasConstraintName("FK__ChiTietXu__maPhi__2A164134");

                    b.Navigation("MaLoNavigation");

                    b.Navigation("MaPhieuXuatNavigation");
                });

            modelBuilder.Entity("server.Models.DichVu", b =>
                {
                    b.HasOne("server.Models.LoaiDichVu", "MaLoaiDichVuNavigation")
                        .WithMany("DichVus")
                        .HasForeignKey("MaLoaiDichVu")
                        .HasConstraintName("FK__DichVu__maLoaiDi__03F0984C");

                    b.Navigation("MaLoaiDichVuNavigation");
                });

            modelBuilder.Entity("server.Models.DichVuVaccine", b =>
                {
                    b.HasOne("server.Models.DichVu", "MaDichVuNavigation")
                        .WithMany("DichVuVaccines")
                        .HasForeignKey("MaDichVu")
                        .IsRequired()
                        .HasConstraintName("FK__DichVuVac__maDic__0E6E26BF");

                    b.HasOne("server.Models.Vaccine", "MaVaccineNavigation")
                        .WithMany("DichVuVaccines")
                        .HasForeignKey("MaVaccine")
                        .IsRequired()
                        .HasConstraintName("FK__DichVuVac__maVac__0F624AF8");

                    b.Navigation("MaDichVuNavigation");

                    b.Navigation("MaVaccineNavigation");
                });

            modelBuilder.Entity("server.Models.DonHang", b =>
                {
                    b.HasOne("server.Models.DiaDiem", "MaDiaDiemYeuThichNavigation")
                        .WithMany("DonHangs")
                        .HasForeignKey("MaDiaDiemYeuThich")
                        .HasConstraintName("FK__DonHang__maDiaDi__395884C4");

                    b.HasOne("server.Models.NguoiDung", "MaNguoiDungNavigation")
                        .WithMany("DonHangs")
                        .HasForeignKey("MaNguoiDung")
                        .IsRequired()
                        .HasConstraintName("FK__DonHang__maNguoi__3864608B");

                    b.Navigation("MaDiaDiemYeuThichNavigation");

                    b.Navigation("MaNguoiDungNavigation");
                });

            modelBuilder.Entity("server.Models.DonHangChiTiet", b =>
                {
                    b.HasOne("server.Models.DichVu", "MaDichVuNavigation")
                        .WithMany()
                        .HasForeignKey("MaDichVu");

                    b.HasOne("server.Models.DonHang", "MaDonHangNavigation")
                        .WithMany("DonHangChiTiets")
                        .HasForeignKey("MaDonHang")
                        .IsRequired()
                        .HasConstraintName("FK__DonHangCh__maDon__3C34F16F");

                    b.Navigation("MaDichVuNavigation");

                    b.Navigation("MaDonHangNavigation");
                });

            modelBuilder.Entity("server.Models.DonHangKhuyenMai", b =>
                {
                    b.HasOne("server.Models.DonHang", "MaDonHangNavigation")
                        .WithMany("DonHangKhuyenMais")
                        .HasForeignKey("MaDonHang")
                        .IsRequired()
                        .HasConstraintName("FK__DonHangKh__maDon__45BE5BA9");

                    b.HasOne("server.Models.KhuyenMai", "MaKhuyenMaiNavigation")
                        .WithMany("DonHangKhuyenMais")
                        .HasForeignKey("MaKhuyenMai")
                        .IsRequired()
                        .HasConstraintName("FK__DonHangKh__maKhu__46B27FE2");

                    b.Navigation("MaDonHangNavigation");

                    b.Navigation("MaKhuyenMaiNavigation");
                });

            modelBuilder.Entity("server.Models.KhuyenMai", b =>
                {
                    b.HasOne("server.Models.LoaiKhuyenMai", "MaLoaiKhuyenMaiNavigation")
                        .WithMany("KhuyenMais")
                        .HasForeignKey("MaLoaiKhuyenMai")
                        .HasConstraintName("FK__KhuyenMai__maLoa__42E1EEFE");

                    b.Navigation("MaLoaiKhuyenMaiNavigation");
                });

            modelBuilder.Entity("server.Models.LichHen", b =>
                {
                    b.HasOne("server.Models.DiaDiem", "MaDiaDiemNavigation")
                        .WithMany("LichHens")
                        .HasForeignKey("MaDiaDiem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__LichHen__maDiaDiem__NewConstraint");

                    b.HasOne("server.Models.DonHang", "MaDonHangNavigation")
                        .WithMany("LichHens")
                        .HasForeignKey("MaDonHang")
                        .IsRequired()
                        .HasConstraintName("FK__LichHen__maDonHa__503BEA1C");

                    b.Navigation("MaDiaDiemNavigation");

                    b.Navigation("MaDonHangNavigation");
                });

            modelBuilder.Entity("server.Models.LichLamViec", b =>
                {
                    b.HasOne("server.Models.BacSi", "MaBacSiNavigation")
                        .WithMany("LichLamViecs")
                        .HasForeignKey("MaBacSi")
                        .IsRequired()
                        .HasConstraintName("FK__LichLamVi__maBac__4A8310C6");

                    b.HasOne("server.Models.DiaDiem", "MaDiaDiemNavigation")
                        .WithMany("LichLamViecs")
                        .HasForeignKey("MaDiaDiem")
                        .IsRequired()
                        .HasConstraintName("FK__LichLamVi__maDia__4B7734FF");

                    b.Navigation("MaBacSiNavigation");

                    b.Navigation("MaDiaDiemNavigation");
                });

            modelBuilder.Entity("server.Models.LichTiemChuan", b =>
                {
                    b.HasOne("server.Models.Vaccine", "MaVaccineNavigation")
                        .WithMany("LichTiemChuans")
                        .HasForeignKey("MaVaccine")
                        .IsRequired()
                        .HasConstraintName("FK__LichTiemC__maVac__00200768");

                    b.Navigation("MaVaccineNavigation");
                });

            modelBuilder.Entity("server.Models.LoVaccine", b =>
                {
                    b.HasOne("server.Models.NhaCungCap", "MaNhaCungCapNavigation")
                        .WithMany("LoVaccines")
                        .HasForeignKey("MaNhaCungCap")
                        .IsRequired()
                        .HasConstraintName("FK__LoVaccine__maNha__1CBC4616");

                    b.HasOne("server.Models.Vaccine", "MaVaccineNavigation")
                        .WithMany("LoVaccines")
                        .HasForeignKey("MaVaccine")
                        .IsRequired()
                        .HasConstraintName("FK__LoVaccine__maVac__1BC821DD");

                    b.Navigation("MaNhaCungCapNavigation");

                    b.Navigation("MaVaccineNavigation");
                });

            modelBuilder.Entity("server.Models.NguoiDung", b =>
                {
                    b.HasOne("server.Models.NguonAnh", "MaAnhNavigation")
                        .WithMany("NguoiDungs")
                        .HasForeignKey("MaAnh")
                        .HasConstraintName("FK__NguoiDung__maAnh__4F7CD00D");

                    b.HasOne("server.Models.VaiTro", "MaVaiTroNavigation")
                        .WithMany("NguoiDungs")
                        .HasForeignKey("MaVaiTro")
                        .IsRequired()
                        .HasConstraintName("FK__NguoiDung__maAnh__4E88ABD4");

                    b.Navigation("MaAnhNavigation");

                    b.Navigation("MaVaiTroNavigation");
                });

            modelBuilder.Entity("server.Models.NguoiDungQuyen", b =>
                {
                    b.HasOne("server.Models.NguoiDung", "MaNguoiDungNavigation")
                        .WithMany("NguoiDungQuyens")
                        .HasForeignKey("MaNguoiDung")
                        .IsRequired()
                        .HasConstraintName("FK__NguoiDung__maNgu__52593CB8");

                    b.HasOne("server.Models.Quyen", "MaQuyenNavigation")
                        .WithMany("NguoiDungQuyens")
                        .HasForeignKey("MaQuyen")
                        .IsRequired()
                        .HasConstraintName("FK__NguoiDung__maQuy__534D60F1");

                    b.Navigation("MaNguoiDungNavigation");

                    b.Navigation("MaQuyenNavigation");
                });

            modelBuilder.Entity("server.Models.NguonAnh", b =>
                {
                    b.HasOne("server.Models.NhanAnh", "MaNhanNavigation")
                        .WithMany("NguonAnhs")
                        .HasForeignKey("MaNhan")
                        .HasConstraintName("FK__NguonAnh__maNhan__3E52440B");

                    b.Navigation("MaNhanNavigation");
                });

            modelBuilder.Entity("server.Models.NhaCungCap", b =>
                {
                    b.HasOne("server.Models.NguonAnh", "MaAnhNavigation")
                        .WithMany("NhaCungCaps")
                        .HasForeignKey("MaAnh")
                        .HasConstraintName("FK__NhaCungCa__maAnh__151B244E");

                    b.Navigation("MaAnhNavigation");
                });

            modelBuilder.Entity("server.Models.PhienDangNhap", b =>
                {
                    b.HasOne("server.Models.NguoiDung", "MaNguoiDungNavigation")
                        .WithMany("PhienDangNhaps")
                        .HasForeignKey("MaNguoiDung")
                        .IsRequired()
                        .HasConstraintName("FK__PhienDang__maNgu__5629CD9C");

                    b.Navigation("MaNguoiDungNavigation");
                });

            modelBuilder.Entity("server.Models.PhieuDangKyLichTiem", b =>
                {
                    b.HasOne("server.Models.DiaDiem", "MaDiaDiemNavigation")
                        .WithMany()
                        .HasForeignKey("MaDiaDiem")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__PhieuDan__maDiaDiem__NewConstraint3");

                    b.HasOne("server.Models.DichVu", "MaDichVuNavigation")
                        .WithMany()
                        .HasForeignKey("MaDichVu")
                        .IsRequired()
                        .HasConstraintName("FK__PhieuDan__maDichVu__NewConstraint2");

                    b.HasOne("server.Models.NguoiDung", "MaKhachHangNavigation")
                        .WithMany()
                        .HasForeignKey("MaKhachHang")
                        .IsRequired()
                        .HasConstraintName("FK__PhieuDan__maKha__NewConstraint1");

                    b.Navigation("MaDiaDiemNavigation");

                    b.Navigation("MaDichVuNavigation");

                    b.Navigation("MaKhachHangNavigation");
                });

            modelBuilder.Entity("server.Models.PhieuNhap", b =>
                {
                    b.HasOne("server.Models.NhaCungCap", "MaNhaCungCapNavigation")
                        .WithMany("PhieuNhaps")
                        .HasForeignKey("MaNhaCungCap")
                        .HasConstraintName("FK__PhieuNhap__maNha__1F98B2C1");

                    b.HasOne("server.Models.QuanLy", "MaQuanLyNavigation")
                        .WithMany()
                        .HasForeignKey("MaQuanLy")
                        .HasConstraintName("FK__PhieuNhap__MaQua__NewConstraint4");

                    b.Navigation("MaNhaCungCapNavigation");

                    b.Navigation("MaQuanLyNavigation");
                });

            modelBuilder.Entity("server.Models.PhieuThanhLy", b =>
                {
                    b.HasOne("server.Models.DiaDiem", "MaDiaDiemNavigation")
                        .WithMany("PhieuThanhLies")
                        .HasForeignKey("MaDiaDiem")
                        .HasConstraintName("FK__PhieuThan__maDia__2DE6D218");

                    b.Navigation("MaDiaDiemNavigation");
                });

            modelBuilder.Entity("server.Models.PhieuTiem", b =>
                {
                    b.HasOne("server.Models.BacSi", "MaBacSiNavigation")
                        .WithMany("PhieuTiems")
                        .HasForeignKey("MaBacSi")
                        .HasConstraintName("FK__PhieuTiem__maBac__5AB9788F");

                    b.HasOne("server.Models.DichVu", "MaDichVuNavigation")
                        .WithMany()
                        .HasForeignKey("MaDichVu")
                        .HasConstraintName("FK__PhieuTiem__maDic__NewConstraint");

                    b.HasOne("server.Models.NguoiDung", "MaNguoiDungNavigation")
                        .WithMany()
                        .HasForeignKey("MaNguoiDung")
                        .HasConstraintName("FK__PhieuTiem__maNguoiDung__NewConstraint");

                    b.Navigation("MaBacSiNavigation");

                    b.Navigation("MaDichVuNavigation");

                    b.Navigation("MaNguoiDungNavigation");
                });

            modelBuilder.Entity("server.Models.PhieuXuat", b =>
                {
                    b.HasOne("server.Models.DiaDiem", "MaDiaDiemNhapNavigation")
                        .WithMany("PhieuXuatMaDiaDiemNhapNavigations")
                        .HasForeignKey("MaDiaDiemNhap")
                        .HasConstraintName("FK__PhieuXuat__maDia__2739D489");

                    b.HasOne("server.Models.DiaDiem", "MaDiaDiemXuatNavigation")
                        .WithMany("PhieuXuatMaDiaDiemXuatNavigations")
                        .HasForeignKey("MaDiaDiemXuat")
                        .HasConstraintName("FK__PhieuXuat__maDia__2645B050");

                    b.HasOne("server.Models.QuanLy", "MaQuanLyNavigation")
                        .WithMany()
                        .HasForeignKey("MaQuanLy")
                        .HasConstraintName("FK__PhieuXuat__MaQua__NewConstraint");

                    b.Navigation("MaDiaDiemNhapNavigation");

                    b.Navigation("MaDiaDiemXuatNavigation");

                    b.Navigation("MaQuanLyNavigation");
                });

            modelBuilder.Entity("server.Models.QuanLy", b =>
                {
                    b.HasOne("server.Models.NguoiDung", "MaNguoiDungNavigation")
                        .WithOne("QuanLy")
                        .HasForeignKey("server.Models.QuanLy", "MaNguoiDung")
                        .IsRequired()
                        .HasConstraintName("FK__QuanLy__maNguoiD__60A75C0F");

                    b.Navigation("MaNguoiDungNavigation");
                });

            modelBuilder.Entity("server.Models.ThongTinNguoiDung", b =>
                {
                    b.HasOne("server.Models.NguoiDung", "MaNguoiDungNavigation")
                        .WithMany("ThongTinNguoiDungs")
                        .HasForeignKey("MaNguoiDung")
                        .IsRequired()
                        .HasConstraintName("FK__ThongTinN__maNgu__59063A47");

                    b.Navigation("MaNguoiDungNavigation");
                });

            modelBuilder.Entity("server.Models.TonKhoLo", b =>
                {
                    b.HasOne("server.Models.DiaDiem", "MaDiaDiemNavigation")
                        .WithMany("TonKhoLos")
                        .HasForeignKey("MaDiaDiem")
                        .HasConstraintName("FK__TonKhoLo__maDiaD__3493CFA7");

                    b.HasOne("server.Models.LoVaccine", "MaLoNavigation")
                        .WithMany("TonKhoLos")
                        .HasForeignKey("MaLo")
                        .HasConstraintName("FK__TonKhoLo__maLo__3587F3E0");

                    b.Navigation("MaDiaDiemNavigation");

                    b.Navigation("MaLoNavigation");
                });

            modelBuilder.Entity("server.Models.VaiTroQuyen", b =>
                {
                    b.HasOne("server.Models.Quyen", "MaQuyenNavigation")
                        .WithMany("VaiTroQuyens")
                        .HasForeignKey("MaQuyen")
                        .IsRequired()
                        .HasConstraintName("FK__VaiTroQuy__maQuy__4BAC3F29");

                    b.HasOne("server.Models.VaiTro", "MaVaiTroNavigation")
                        .WithMany("VaiTroQuyens")
                        .HasForeignKey("MaVaiTro")
                        .IsRequired()
                        .HasConstraintName("FK__VaiTroQuy__maVai__4AB81AF0");

                    b.Navigation("MaQuyenNavigation");

                    b.Navigation("MaVaiTroNavigation");
                });

            modelBuilder.Entity("server.Models.YeuCauDoiLich", b =>
                {
                    b.HasOne("server.Models.LichHen", "MaLichHenNavigation")
                        .WithMany("YeuCauDoiLiches")
                        .HasForeignKey("MaLichHen")
                        .IsRequired()
                        .HasConstraintName("FK__YeuCauDoi__maLic__55009F39");

                    b.Navigation("MaLichHenNavigation");
                });

            modelBuilder.Entity("server.Models.BacSi", b =>
                {
                    b.Navigation("LichLamViecs");

                    b.Navigation("PhieuTiems");
                });

            modelBuilder.Entity("server.Models.DiaDiem", b =>
                {
                    b.Navigation("AnhDiaDiems");

                    b.Navigation("BacSis");

                    b.Navigation("DonHangs");

                    b.Navigation("LichHens");

                    b.Navigation("LichLamViecs");

                    b.Navigation("PhieuThanhLies");

                    b.Navigation("PhieuXuatMaDiaDiemNhapNavigations");

                    b.Navigation("PhieuXuatMaDiaDiemXuatNavigations");

                    b.Navigation("TonKhoLos");
                });

            modelBuilder.Entity("server.Models.DichVu", b =>
                {
                    b.Navigation("AnhDichVus");

                    b.Navigation("DichVuVaccines");
                });

            modelBuilder.Entity("server.Models.DonHang", b =>
                {
                    b.Navigation("DonHangChiTiets");

                    b.Navigation("DonHangKhuyenMais");

                    b.Navigation("LichHens");
                });

            modelBuilder.Entity("server.Models.KhuyenMai", b =>
                {
                    b.Navigation("DonHangKhuyenMais");
                });

            modelBuilder.Entity("server.Models.LichHen", b =>
                {
                    b.Navigation("YeuCauDoiLiches");
                });

            modelBuilder.Entity("server.Models.LoVaccine", b =>
                {
                    b.Navigation("ChiTietNhaps");

                    b.Navigation("ChiTietThanhLies");

                    b.Navigation("ChiTietXuats");

                    b.Navigation("TonKhoLos");
                });

            modelBuilder.Entity("server.Models.LoaiDichVu", b =>
                {
                    b.Navigation("DichVus");
                });

            modelBuilder.Entity("server.Models.LoaiKhuyenMai", b =>
                {
                    b.Navigation("KhuyenMais");
                });

            modelBuilder.Entity("server.Models.NguoiDung", b =>
                {
                    b.Navigation("BacSi");

                    b.Navigation("DonHangs");

                    b.Navigation("NguoiDungQuyens");

                    b.Navigation("PhienDangNhaps");

                    b.Navigation("QuanLy");

                    b.Navigation("ThongTinNguoiDungs");
                });

            modelBuilder.Entity("server.Models.NguonAnh", b =>
                {
                    b.Navigation("AnhDiaDiems");

                    b.Navigation("AnhDichVus");

                    b.Navigation("AnhNhaCungCaps");

                    b.Navigation("AnhVaccines");

                    b.Navigation("NguoiDungs");

                    b.Navigation("NhaCungCaps");
                });

            modelBuilder.Entity("server.Models.NhaCungCap", b =>
                {
                    b.Navigation("AnhNhaCungCaps");

                    b.Navigation("LoVaccines");

                    b.Navigation("PhieuNhaps");
                });

            modelBuilder.Entity("server.Models.NhanAnh", b =>
                {
                    b.Navigation("NguonAnhs");
                });

            modelBuilder.Entity("server.Models.PhieuNhap", b =>
                {
                    b.Navigation("ChiTietNhaps");
                });

            modelBuilder.Entity("server.Models.PhieuThanhLy", b =>
                {
                    b.Navigation("ChiTietThanhLies");
                });

            modelBuilder.Entity("server.Models.PhieuTiem", b =>
                {
                    b.Navigation("ChiTietPhieuTiems");
                });

            modelBuilder.Entity("server.Models.PhieuXuat", b =>
                {
                    b.Navigation("ChiTietXuats");
                });

            modelBuilder.Entity("server.Models.Quyen", b =>
                {
                    b.Navigation("NguoiDungQuyens");

                    b.Navigation("VaiTroQuyens");
                });

            modelBuilder.Entity("server.Models.Vaccine", b =>
                {
                    b.Navigation("AnhVaccines");

                    b.Navigation("DichVuVaccines");

                    b.Navigation("LichTiemChuans");

                    b.Navigation("LoVaccines");
                });

            modelBuilder.Entity("server.Models.VaiTro", b =>
                {
                    b.Navigation("NguoiDungs");

                    b.Navigation("VaiTroQuyens");
                });
#pragma warning restore 612, 618
        }
    }
}
